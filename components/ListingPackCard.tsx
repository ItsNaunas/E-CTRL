'use client';

import { CheckCircle, TrendingUp, Copy, Download } from 'lucide-react';
import Card from './Card';
import Button from './Button';
import type { SummaryResult } from '@/types/ai';

interface ListingPackCardProps {
  result: SummaryResult & {
    listingPack?: {
      title: string;
      bullets: string[];
      description: string;
      keywords: {
        primary: string[];
        secondary: string[];
        longTail: string[];
      };
      imageGallery: {
        mainImage: string;
        lifestyleImage: string;
        benefitsInfographic: string;
        howToUse: string;
        measurements: string;
        comparison: string;
      };
    };
  };
}

export default function ListingPackCard({ result }: ListingPackCardProps) {
  const getScoreColor = (score: number) => {
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreIcon = (score: number) => {
    if (score >= 70) {
      return <CheckCircle className="h-5 w-5 text-green-600" />;
    }
    return <TrendingUp className="h-5 w-5 text-yellow-600" />;
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    // You could add a toast notification here
  };

  const downloadListingPack = () => {
    const content = `
E-CTRL Amazon Listing Pack
==========================

PRODUCT TITLE:
${result.listingPack?.title || 'N/A'}

BULLET POINTS:
${result.listingPack?.bullets.map((bullet, i) => `${i + 1}. ${bullet}`).join('\n') || 'N/A'}

PRODUCT DESCRIPTION:
${result.listingPack?.description || 'N/A'}

KEYWORDS:
Primary: ${result.listingPack?.keywords.primary.join(', ') || 'N/A'}
Secondary: ${result.listingPack?.keywords.secondary.join(', ') || 'N/A'}
Long-tail: ${result.listingPack?.keywords.longTail.join(', ') || 'N/A'}

IMAGE GALLERY PLAN:
1. Main Image: ${result.listingPack?.imageGallery.mainImage || 'N/A'}
2. Lifestyle Image: ${result.listingPack?.imageGallery.lifestyleImage || 'N/A'}
3. Benefits Infographic: ${result.listingPack?.imageGallery.benefitsInfographic || 'N/A'}
4. How-to-Use: ${result.listingPack?.imageGallery.howToUse || 'N/A'}
5. Measurements: ${result.listingPack?.imageGallery.measurements || 'N/A'}
6. Comparison: ${result.listingPack?.imageGallery.comparison || 'N/A'}

Generated by E-CTRL - AI-Powered Amazon Growth Audit Tool
    `;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'amazon-listing-pack.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="space-y-6">
      {/* Score and Overview */}
      <Card className="border-accent/20 bg-accent/5">
        <div className="flex items-center justify-between">
          <div>
            <h3 className="text-lg font-semibold text-foreground">
              {result.title}
            </h3>
            <p className="text-sm text-muted-foreground mt-1">
              Complete Amazon listing optimization pack
            </p>
          </div>
          <div className="flex items-center space-x-2">
            {getScoreIcon(result.score)}
            <span className={`text-2xl font-bold ${getScoreColor(result.score)}`}>
              {result.score}
            </span>
            <span className="text-sm text-muted-foreground">/100</span>
          </div>
        </div>
      </Card>

      {/* AI-Powered Analysis */}
      <Card>
        <div className="space-y-4">
          <div className="flex items-center space-x-2">
            <div className="text-lg"></div>
            <h4 className="font-medium text-foreground">AI-Powered Analysis</h4>
          </div>
          
          {/* Key Highlights */}
          {result.highlights && result.highlights.length > 0 && (
            <div className="space-y-2">
              <h5 className="text-sm font-medium text-foreground">Key Findings:</h5>
              <div className="space-y-2">
                {result.highlights.map((highlight, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <div className="mt-1.5 h-1.5 w-1.5 rounded-full bg-blue-500 flex-shrink-0" />
                    <p className="text-sm text-foreground leading-relaxed">
                      {highlight}
                    </p>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Recommendations */}
          {result.recommendations && result.recommendations.length > 0 && (
            <div className="space-y-2">
              <h5 className="text-sm font-medium text-foreground">Actionable Recommendations:</h5>
              <div className="space-y-2">
                {result.recommendations.map((recommendation, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <div className="mt-1.5 h-1.5 w-1.5 rounded-full bg-green-500 flex-shrink-0" />
                    <p className="text-sm text-foreground leading-relaxed">
                      {recommendation}
                    </p>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </Card>

      {/* Complete Listing Pack */}
      {result.listingPack && (
        <Card>
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <h4 className="font-medium text-foreground">Complete Listing Pack</h4>
              <Button
                variant="secondary"
                size="sm"
                onClick={downloadListingPack}
                className="flex items-center space-x-2"
              >
                <Download className="h-4 w-4" />
                <span>Download Pack</span>
              </Button>
            </div>

            {/* Product Title */}
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <h5 className="text-sm font-medium text-foreground">Product Title</h5>
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => copyToClipboard(result.listingPack!.title)}
                  className="flex items-center space-x-1"
                >
                  <Copy className="h-3 w-3" />
                  <span className="text-xs">Copy</span>
                </Button>
              </div>
              <div className="p-3 bg-muted/50 rounded-lg">
                <p className="text-sm text-foreground font-medium">
                  {result.listingPack.title}
                </p>
              </div>
            </div>

            {/* Bullet Points */}
            <div className="space-y-2">
              <h5 className="text-sm font-medium text-foreground">Bullet Points</h5>
              <div className="space-y-2">
                {result.listingPack.bullets.map((bullet, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <div className="mt-2 h-1.5 w-1.5 rounded-full bg-accent flex-shrink-0" />
                    <div className="flex-1 p-3 bg-muted/50 rounded-lg">
                      <p className="text-sm text-foreground">{bullet}</p>
                    </div>
                    <Button
                      variant="ghost"
                      size="sm"
                      onClick={() => copyToClipboard(bullet)}
                      className="flex items-center space-x-1"
                    >
                      <Copy className="h-3 w-3" />
                    </Button>
                  </div>
                ))}
              </div>
            </div>

            {/* Product Description */}
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <h5 className="text-sm font-medium text-foreground">Product Description</h5>
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => copyToClipboard(result.listingPack!.description)}
                  className="flex items-center space-x-1"
                >
                  <Copy className="h-3 w-3" />
                  <span className="text-xs">Copy</span>
                </Button>
              </div>
              <div className="p-3 bg-muted/50 rounded-lg">
                <p className="text-sm text-foreground leading-relaxed">
                  {result.listingPack.description}
                </p>
              </div>
            </div>

            {/* Keywords */}
            <div className="space-y-3">
              <h5 className="text-sm font-medium text-foreground">Keyword Strategy</h5>
              
              <div className="grid gap-3 md:grid-cols-3">
                <div className="space-y-2">
                  <h6 className="text-xs font-medium text-muted-foreground uppercase tracking-wide">
                    Primary Keywords
                  </h6>
                  <div className="flex flex-wrap gap-1">
                    {result.listingPack.keywords.primary.map((keyword, index) => (
                      <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">
                        {keyword}
                      </span>
                    ))}
                  </div>
                </div>

                <div className="space-y-2">
                  <h6 className="text-xs font-medium text-muted-foreground uppercase tracking-wide">
                    Secondary Keywords
                  </h6>
                  <div className="flex flex-wrap gap-1">
                    {result.listingPack.keywords.secondary.map((keyword, index) => (
                      <span key={index} className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded">
                        {keyword}
                      </span>
                    ))}
                  </div>
                </div>

                <div className="space-y-2">
                  <h6 className="text-xs font-medium text-muted-foreground uppercase tracking-wide">
                    Long-tail Keywords
                  </h6>
                  <div className="flex flex-wrap gap-1">
                    {result.listingPack.keywords.longTail.map((keyword, index) => (
                      <span key={index} className="px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded">
                        {keyword}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </div>

            {/* Image Gallery Plan */}
            <div className="space-y-3">
              <h5 className="text-sm font-medium text-foreground">Image Gallery Plan</h5>
              <div className="grid gap-3 md:grid-cols-2">
                {Object.entries(result.listingPack.imageGallery).map(([key, description]) => (
                  <div key={key} className="p-3 bg-muted/50 rounded-lg">
                    <h6 className="text-xs font-medium text-muted-foreground uppercase tracking-wide mb-1">
                      {key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}
                    </h6>
                    <p className="text-sm text-foreground">{description}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </Card>
      )}
    </div>
  );
}
